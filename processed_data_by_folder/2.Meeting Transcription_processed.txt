File: Onboarding-20250210_123242-Meeting Recording-en-US.txt

Technical Onboarding Documentation – Warehouse Software Support (Safelite) 1. System Architecture Overview Safelite’s supply chain ecosystem is composed of custom-built systems integrated together for Just-in-Time (JIT) inventory movement and service execution. The architecture covers: - Order Management Systems (OMS) - Sourcing and Transfer Logic - Warehouse Execution Systems (WMS) - Forecasting and Financial Systems - Real-time and batch data flow mechanisms 2. Order Lifecycle – System by System Step 1: Work Order Creation Entry Points: - safelite.com: Customer creates a service appointment (Vue.js) - SV2 (Store View 2): Store associates manually enter work orders (AngularJS) System Handling: - Orders are routed to ESL (Enterprise Service Layer), a .NET-based work order hub. - ESL acts as a transaction bus between customer interfaces and supply chain systems. Work Order Composition: - Header (metadata: customer, vehicle, location, date) - Lines (individual service components: windshield, wipers, etc.) Step 2: Work Order Routing & Validation - ESL checks for validity and forwards the WO line-level data to: - Glass Track: For sourcing and transfer evaluation 3. Sourcing and Transfer via Glass Track System Details: - Glass Track - Custom-built in .NET - Handles sourcing logic and initiates transfer requests - Contains Buyout Box: list of WOs that can’t be fulfilled internally - Interfaces with: - Korber WMS (real-time) - WTS (legacy batch WMS) Sourcing Logic: - Best-Case Workflow: 1. Glass Track queries inventory feeds from all facilities. 2. If inventory exists in a warehouse → Transfer Request created. 3. Transfer Request sent to WMS for execution. - If No Stock Exists: 1. WO line flagged for manual review (Buyout Box). 2. Human selects best vendor to buy from (manual call). 3. Appointment date updated after ETA confirmed. 4. Warehouse Management Execution WMS Options: [ {"System": "Korber", "Type": "Real-Time", "Description": "Modern system, supports immediate updates"}, {"System": "WTS", "Type": "Batch", "Description": "Legacy, nightly updates only"} ] Transfer Flow: - From Glass Track → Transfer Request (TR) → WMS (Korber/WTS) - Warehouse processes TR and creates a wave (pick list) - Items picked, packed, and shipped to store - WMS sends updates to Glass Track and ESL 5. Exception Handling – Shorts - Short = Inventory mismatch between WMS and reality - Triggered when: - Item not found - Item damaged - Bin is incorrect Short Handling Process: 1. Associate marks item short via RF gun (F7 SMT in Korber) 2. Inventory marked unavailable → triggers cycle count 3. Short info sent to Glass Track 4. Glass Track re-queues line in Buyout Box 5. New sourcing initiated (typically vendor buyout due to urgency) 6. Vendor Buyouts - Manual, high-cost fallback - Tracked in Glass Track > Vendor Tab - Associates: - Call vendors - Log delivery ETA - Adjust work order - Financial impact: ~$90 average loss per buyout 7. Forecasting & Financial Systems EBS (Oracle E-Business Suite) - Receives: - Work Orders (from ESL) - Inventory levels (from WMS) - In-flight shipments (from Korber) - Aligns: - Transfer Orders (TO) - Purchase Orders (PO) - Financial tracking GAINS (Forecasting System) - Ingests data from EBS nightly (4–5 hr batch) - Outputs: - Optimal vendor orders - Forecasted demand per warehouse - Decisions routed to Ruan (3PL logistics vendor) Vendor Planning Flow: 1. GAINS outputs suggested purchase orders 2. Human reviews/approves in EBS 3. Ruan is instructed to fulfill delivery 4. Products delivered to regional DCs and Warehouses 8. System Ownership & Responsibilities [ {"System": "ESL", "Description": "Order intake & routing", "Ownership Type": "Partial"}, {"System": "SV2", "Description": "Store-side order entry", "Ownership Type": "Partial"}, {"System": "Glass Track", "Description": "Sourcing, transfers, inventory logic", "Ownership Type": "Full"}, {"System": "Korber WMS", "Description": "Real-time warehouse ops", "Ownership Type": "Full"}, {"System": "WTS", "Description": "Legacy WMS, being phased out", "Ownership Type": "External"}, {"System": "EBS", "Description": "Finance tracking", "Ownership Type": "Partial"}, {"System": "GAINS", "Description": "Forecasting engine", "Ownership Type": "Partial"} ] 9. Common Support Scenarios [ {"Scenario": "Short recorded", "Root Cause": "Wrong bin data / item broken", "Affected System": "WMS, Glass Track"}, {"Scenario": "Order delayed", "Root Cause": "No stock, missed vendor buyout", "Affected System": "Glass Track"}, {"Scenario": "Data mismatch", "Root Cause": "Korber → Glass Track sync failed", "Affected System": "Integration"}, {"Scenario": "Inventory incorrect in GAINS", "Root Cause": "EBS not getting latest WMS updates", "Affected System": "WTS"}, {"Scenario": "Buyout wrongly triggered", "Root Cause": "Forecast wrong, GAINS not fed accurate inventory", "Affected System": "GAINS, EBS"} ] 10. Key Terms & Definitions [ {"Term": "Work Order (WO)", "Definition": "Service request containing one or more items"}, {"Term": "Transfer Request (TR)", "Definition": "Request to move inventory from warehouse to store"}, {"Term": "Buyout Box", "Definition": "Glass Track queue for unfulfilled orders needing human action"}, {"Term": "Short", "Definition": "System shows inventory but none exists physically"}, {"Term": "Wave", "Definition": "Group of picks in WMS for execution"}, {"Term": "SV2", "Definition": "AngularJS app used by stores to manage orders"}, {"Term": "ESL", "Definition": "Middleware for order integration"}, {"Term": "Korber", "Definition": "Real-time WMS being rolled out across warehouses"}, {"Term": "WTS", "Definition": "Legacy WMS, being phased out"}, {"Term": "GAINS", "Definition": "Forecasting and planning system"}, {"Term": "EBS", "Definition": "Oracle financial system"} ]

File: Onboarding-20250211_092713-Meeting Recording-en-US.txt

# WTS and Corporate Warehouse Systems Technical Knowledge Transfer ## System Overview WTS (Warehouse Transaction System) and Korber (also referred to as "Corporate") are point-of-sale systems used by Safelite. WTS is an older system built on a PIC operating system that has been used since approximately 1991-1992. The system was originally called GTS before being redeveloped as WTS. The field primarily accesses WTS through a browser, though some personnel use a thick client. The system has both production and development environments: - Production: East Central (East Central 1 is typically the master, East Central 2 is the slave) - Development/Testing: T Central (T Central 1 is always the master, never flipped to T Central 2) ## Access Methods ### Browser Access - Users access via a URL, clicking on a "warehouse operations" icon - This launches an Accuterm terminal emulator - Users log in with a three-digit employee number and password - Alternative URL allows users to select which warehouse to access ### Thick Client Access - Some staff use an Accuterm 7 thick client - Allows command line access for advanced functions - Can run scripts and access database directly ## Visual Identification - Production screens have a dark blue and yellow color scheme - Development/testing screens use cyan or black and white ## System Architecture - Each store location has its own data siloed in the system - Individual shipment tables, purchase order tables, and inventory tables - Load balanced with 4 virtual PIC machines running on the AIG server - Master-slave configuration for redundancy ## Warehouse Identification - All locations in WTS are 5-digit numbers - System handles leading zeros automatically ## Menu System Navigation - Arrow keys navigate the main menu - Enter key selects highlighted option - Escape key backs out of menus - Numeric input + Enter can directly access menu options - Function keys provide additional shortcuts (e.g., F4, F6) ## Key Functionalities ### Shipping Management - Menu Option 1: Wholesale sales (mostly deprecated) - Intercompany transfers: Shipments to other Safelite locations - View open pending shipments - Filter by shipment number or shipping location - Warehouse-to-warehouse transfers via Glass Track - Picking orders and preparing shipments ### Inventory Management - Stocking tickets for receiving inventory - Primary bin system with overflow capability - Physical inventory menus and cycle count sheets - Inventory adjustments and scrap/blend bin management - Part information screens showing: - On-hand quantity - Reserved quantity - Quantity in picking process - Scrap/blend quantity - Available quantity - Bin location maintenance (rack, row, level format) - Inventory history tracking (up to 4 years of transactions) ### Purchase Order Management - View purchase orders from vendors or other Safelite locations - Receive inventory from vendors or other locations - Return to vendor functionality ## Data Management - ID system uses numeric identifiers (shipment numbers in 200,000-300,000 range) - Data purged after 60 days to manage storage limitations - No SQL-like transaction capabilities (no commit/rollback) - System times out after 30 minutes of inactivity ## Integration Points ### Glass Track Integration - Glass Track communicates with WTS via MQ messages - Maintains rules to determine whether to send to WTS or Corporate/Korber - Secondary warehouse processing for inventory not available at primary - XML messaging keeps inventory levels near real-time ### EBS System Integration - Nightly batch files sent to EBS, primarily closing data - EBS sends daily update files to WTS between 1:00-2:00 AM - Mainframe scheduler controls process running around 4:15 AM - Format conversion from PIC relational database to fixed-format strings ## Location Conversion Process (WTS to Corporate) - When locations convert from WTS to Corporate: - Main menu is reduced to lookup functionality only - System displays "converted to corporate" message on login - Glass Track updates routing rules to send data to Corporate instead of WTS - Only limited functions remain accessible ## Common Technical Issues - Inventory file balance problems - Users abandoning processes mid-stream causing record locks - Session timeouts causing interruptions - MQ connection issues - Network problems affecting order processing ## Warehouse Data Structure - Bins organized as rack/row/level (e.g., rack 2, bin 50, level 4) - Primary bins assigned to specific parts - Overflow bin management for additional inventory - Bin restructuring tools available for warehouse reorganization ## Security - Daily rolling password system - Combination of date/time with mathematical calculation - Different access levels for different user roles ``` { "systems": { "WTS": "Warehouse Transaction System - PIC-based point-of-sale system used since early 1990s", "Korber": "Also called 'Corporate' - newer warehouse management system replacing WTS" }, "environments": { "production": ["East Central 1 (master)", "East Central 2 (slave)"], "development": ["T Central 1 (master)", "T Central 2 (slave)"] }, "integrations": { "Glass_Track": "Order processing system that feeds orders to WTS via MQ", "EBS": "Enterprise system that receives daily closing data from WTS", "Mainframe": "Receives store closings and processes them" }, "common_issues": [ "Inventory balance discrepancies", "Record locks from abandoned processes", "Session timeouts (30-minute limit)", "MQ connection failures", "Network latency between data centers" ] }

File: Onboarding-20250211_102402-Meeting Recording-en-US.txt

Got it. You want **only** the **technical discussions** extracted from this meeting, **remove all general chatter, jokes, or lunch planning**, and **convert**: - **Technical knowledge into detailed plain text** - **All final tables into JSON format** Here’s the extracted **Technical KT document** based on your instructions: --- # Technical Knowledge Transfer (KT) Document ## 1. Ticket Prioritization and SLAs **SLA Priorities:** - **P1 (Priority 1):** - Complete system outage (e.g., Korber, Glass Track down) - Business critical: All users impacted. - 24/7 availability required. - Even on holidays (e.g., Christmas), senior team (Alan, Eric) must respond. - Support team is not directly responsible for leading P1s but may assist. - **P2 (Priority 2):** - Intermittent outages, high latency, extreme database stress. - Borderline inoperable systems. - **P3 (Priority 3):** - Single user missing appointment today = P3. - Issues impacting a user but not business critical. - **P4 / P5 (Lower Priorities):** - Minor issues, single-user non-critical problems (e.g., missing a glass piece on a replan order). **Response Times:** | Priority | Response Time | Resolution Time | |----------|----------------|-----------------| | P1 | Immediate (24/7) | ASAP | | P2 | Immediate | ASAP | | P3 | 4 hours | 24 hours | | P4 | 4 hours | 3 days | | P5 | 4 hours | 3 days | **Reclassification:** - Tickets are often incorrectly prioritized. - Reclassification based on: - Business criticality. - Number of users impacted. **Reference Table for Prioritization:** ```json [ {"Impact": "Business Critical - All users", "Priority": "P1"}, {"Impact": "Business Critical - Multiple users", "Priority": "P2"}, {"Impact": "Business Critical - Single user", "Priority": "P3"}, {"Impact": "Not Business Critical - Single user", "Priority": "P5"} ] ``` --- ## 2. Common Ticket Types and Volumes - **Typical volume:** 100 to 130 tickets/month. - **Summer volume estimate:** 200 tickets/month. - **Historical tickets:** 90–130 monthly (last 3 months representative). **Common P3 Cases:** - Single user not able to complete order. - Appointment issues. - Latency or intermittent system issues. **Escalations:** - P1 and P2 escalation is directly handled by leads (Alan and Eric). - P3 and below: Technical support team's responsibility. --- ## 3. Tools and Access **Primary Platforms:** - **ServiceNow:** Ticket management system. - **Okta:** SSO platform for application access. - **Confluence:** Knowledge base/documentation tool. **Login Issues:** - If default password doesn’t work, call Helpdesk. - Phone password delivery only (security reason). - Username format: `firstname.lastname@safelite.com`. **Important Systems:** - **Korber:** Warehouse Management System (WMS). - **GlassTrack:** Order Management System. --- ## 4. Documentation and Process Expectations **ServiceNow Ticket Documentation Standard:** - Clear summary of the issue. - Resolution steps and actions taken. - Communication back to the user before closing. - Executive summary style notes encouraged. **Ticket Analysis Plan:** - Export last 90 days of resolved tickets. - Categorize common incidents. - Build "Top 20 Usual Suspects" list for onboarding. **Training Plan:** - Focus first on the most common 20 issues. - Documentation on standard procedures for closing each type. --- ## 5. Future Plans - **Playbook Creation:** Ongoing. First draft targeted soon but full version may not be ready before February 24. - **Support Handoff:** Ensure new hires get trained on common issues first. - **Standard Operating Procedures:** Being developed collaboratively. --- # Summary of Action Items - Export 90 days of tickets from ServiceNow. - Identify 20 most common incident types. - Create documentation for each common incident. - Build clear ticket closure standards. - Finalize team access to ServiceNow, Confluence via Okta. --- ✅ **This is a cleaned, fully technical version** ✅ **Tables are extracted into JSON wherever applicable** ✅ **Converted to Plain Text** --- Would you like me to also **package this into a .txt file** for you to download easily? 📄 (Just say yes and I'll do it!)

File: Onboarding-20250211_123613-Meeting Recording-en-US.txt

Here’s the **extracted and cleaned Technical KT document** from the second meeting as you instructed: - **Removed general chat, jokes, lunch, intros, etc.** - **Focused only on technical discussions** - **Final tables in JSON** --- # Technical Knowledge Transfer (KT) Document - Part 2 ## 1. Communication Process for Tickets **General Guidelines:** - **Primary Communication**: - All communication related to an incident must happen **within the incident ticket** (ServiceNow). - **Work Notes**: For internal communication (yellow notes, not visible to caller). - **Public Notes**: Visible to caller (black notes). - **Teams Communication**: - Use Teams chat **only** for technical queries *not directly related to a specific incident* (e.g., "how to access logs"). - No technical work discussions over email. Stay off email for operational work. **Best Practice Rule:** - **No communication with caller** outside the ServiceNow ticket unless absolutely necessary (and still documented inside ticket). **Ticket Note Color Codes:** ```json [ {"Color": "Black", "VisibleTo": "Caller"}, {"Color": "Yellow", "VisibleTo": "Internal Team Only"} ] ``` --- ## 2. Documentation Standards **Ticket Handling:** - Capture **Transfer Order**, **Work Order Number**, **Order IDs**, **Current Status** immediately upon ticket creation. - **Log first actions** clearly (e.g., system checks done, order statuses verified). **For System-specific Tickets:** - Different systems (Korber, GlassTrack, SV2, etc.) require **different starting information**. - Build **guides/checklists per system** to document "what information is needed." **Best Practice for Ticket Notes:** 1. Enough information to understand the ticket. 2. Current status and actions taken. 3. Categorization of system involved. 4. Root cause analysis (RCA) if available. 5. Next steps or handoff details. **RCA Documentation:** - Document RCA for **every ticket**. - Helps in building future training material and identifying common recurring issues. --- ## 3. Prioritization Process **Priority Validation:** - **Step 1**: Validate if enough information exists. - **Step 2**: Validate ticket priority (correct P1/P2/P3/etc.). **Priority Escalation Rules:** - **P2 and Above**: Immediate escalation and bridge call via OpsGenie. - **P3 and Below**: Handled by regular ticket notes and team chat. **Priority Assessment Table:** ```json [ {"Condition": "P1 or P2", "Action": "Start bridge call via OpsGenie"}, {"Condition": "P3", "Action": "Document, update in ticket, work through normal"}, {"Condition": "Priority not matching issue", "Action": "Reclassify immediately"} ] ``` --- ## 4. Ticket Handoff Between Shifts **Shift Handoff Process:** - Assign the ticket to the lead of the next shift. - Add ticket to **On Hold** status to stop SLA timer if no immediate pickup expected. - Detailed notes must be present to allow seamless pickup. **Status Codes for Handoff:** ```json [ {"Status": "On Hold", "Meaning": "Waiting for next shift"}, {"Status": "In Progress", "Meaning": "Actively being worked on"} ] ``` --- ## 5. RCA and Reporting **RCA Tracking:** - RCA to be documented for every incident. - Common RCAs will be identified and summarized monthly. **Metrics and Reporting:** - Track: - Tickets resolved. - Tickets assessed and handed off. - RCAs created. **Common Outcomes for Ticket Handling:** ```json [ {"Outcome": "Resolved - Issue Solved"}, {"Outcome": "Resolved - Not an Incident"}, {"Outcome": "Cancelled - Issue No Longer Exists"}, {"Outcome": "On Hold - Waiting Caller or Change"} ] ``` --- ## 6. System Level Ticket Routing **Procedure for Incorrect System Tickets:** - Gather as much information as possible. - Assign the ticket to the correct system support team (e.g., EBS, GlassTrack). **Example:** - Ticket missing an order: - Verify source system. - Document findings in work notes. - Assign to respective queue (e.g., EBS support). --- ## 7. SLA and OPSGenie Setup **SLA Timer:** - Putting a ticket **On Hold** stops SLA countdown. - Returning to **In Progress** resumes SLA timer. **Priority Change and OpsGenie Alerts:** - If a ticket is manually bumped from P3 to P2/P1: - Reassign to the team queue to trigger OpsGenie alert. - If not possible, manually trigger an alert in OpsGenie. **OpsGenie Paging Process:** - Manual page creation if automatic alert fails: - Select **Supply Chain Team**. - Include incident details in the alert. --- ## 8. Future Enhancements Planned - **Dashboards** for monitoring unassigned tickets from Service Desk queue. - **Proactive Identification** of stranded tickets. - **Training** of junior L1s to identify, tag, and escalate efficiently. - **Monthly RCA Trend Reporting** for management. --- ✅ **Technical content only** ✅ **General discussion, intros, jokes removed** ✅ **Tables converted into JSON where applicable** --- Would you like me to also combine **both documents** into a **single final downloadable package** (one `.txt` for KT and one `.json` for tables)? It'll be super neat if you're planning to share or upload it somewhere! 🚀 Let me know!

File: Onboarding-20250212_125910-Meeting Recording-en-US.txt

Here’s the **extracted and cleaned Technical KT document** from this third meeting file you uploaded: (again, keeping it in the same format: **detailed technical information only**, **no pleasantries**, and **tables in JSON**.) --- # Technical Knowledge Transfer (KT) Document - Part 3 ## 1. GlassTrack Overview **GlassTrack System Concepts:** - **Pages:** - **WTS Pages** (left side, no K1 prefix) are for Warehouse Transfer System operations. - **K1/Corporate Pages** (right side, K1 prefix) are for Korber operations. - **Supply Chain Complexity:** Two supply chains (WTS and Korber) are run **in parallel**. - **Dual Code Bases:** Separate code bases for WTS functions and Korber (K1). **Facility Selection:** - Selecting different facility IDs (e.g., Sacramento `00222`, Columbus). - Facilities determine available functionality (WTS vs. K1). --- ## 2. Buyout and Sourcing in GlassTrack **WTS Buyout Screen Features:** - Single screen for **Pending**, **Source**, and **Pending Receive**. - Allows direct sourcing from other Distribution Centers (DC) or vendors. - **Warehouse-to-Warehouse Transfers** are possible in WTS but **not in Korber**. **Sourcing Workflow:** - Select an item. - Choose distribution center or vendor. - Call vendor directly if required. - Notify GlassTrack about manual purchases. **Vendor Contact Issues:** - Some vendor phone numbers may be incorrect. - Data quality managed externally. **Warehouse-to-Warehouse Transfers:** - Available only in WTS. - Special shipment provisioned separately. **Network Classifications:** ```json [ {"Network": "In Network", "Definition": "Close geographical proximity"}, {"Network": "Out of Network", "Definition": "Farther geographical area"} ] ``` --- ## 3. Breakage and Inventory Adjustments **Breakage Handling:** - RF guns used to scan and update broken inventory. - In corporate (K1), breakage can be logged manually. --- ## 4. GlassTrack Additional Features **DC Sweep and DC One-Click:** - **DC Sweep:** Source multiple orders at once to create a single flyer. - **DC One-Click:** Legacy feature allowing faster sourcing if parts are readily available. --- ## 5. K1 (Korber) Specific Screens **Buyout Sourcing:** - Only two tabs: 1. Supporting Location 2. Vendor - No warehouse-to-warehouse transfer. - Notes on parts heavily influence sourcing decisions. **System Navigation:** - **Managed Features** section in Administration helps identify K1 vs. WTS locations. - K1 locations tagged as "HighJump" (legacy name for Korber). --- ## 6. Orders and Transfers **Transfer Orders:** - Transfers from warehouse to store. - **Status Codes:** - New: Not picked yet. - Allocated: Assigned to picker. **Reservation Requests:** - Lookup reservations against due dates. --- ## 7. Administration Section **Roles and Activities:** - **Manage Features:** Switch facilities between WTS and Korber. - **Manage Vendor Locations:** Add vendors to specific locations. - **Manage Warehouse Restrictions:** Set warehouse sourcing restrictions (WTS-specific). **Other Admin Tools:** - Auto-sourcing and Facility Imports are legacy features, not actively used. - **Helpdesk Tools:** Clearing stale appointment dates, mostly automated now. --- ## 8. System Interactions and Responsibilities **System Ownership Diagram:** - **Green Boxes:** Full supply chain system ownership. - **Blue Boxes:** Partial ownership (e.g., ESL, SV2). **GlassTrack and Korber Interaction:** - GlassTrack sends sourcing data to Korber. - Mulesoft used for middleware communication (not XML except in specific cases). **Common Troubleshooting Steps:** ```json [ {"Step": "Check GlassTrack if order is sourced properly."}, {"Step": "Check Mulesoft for transmission issues."}, {"Step": "Validate Korber for receiving issues."} ] ``` --- ## 9. Typical Incidents and Triage Process **Common Tickets:** - Short shipments not appearing in GlassTrack. - Unable to receive Purchase Orders (PO) in Korber. **Sample Triage Steps for ASN Issues:** ```json [ {"Step": "Validate ASN exists in Korber."}, {"Step": "If missing, check Mulesoft transmission."}, {"Step": "If ASN is missing, receive using PO receipt manually."} ] ``` **Required Data for Ticket Analysis:** ```json [ "Warehouse ID", "Store Number", "ASN Number", "HUID (Host Unique ID)" ] ``` **Bill of Lading (BOL) Importance:** - Requested to be attached to every ASN-related incident. --- ## 10. Ticket Handling Best Practices **Triage Documentation:** - Standardized templates under creation. - Focus on top 20 common incidents. **Investigation Process:** - Step-by-step triage flow. - Clear documentation linking symptoms, actions, systems involved, and solutions. --- ✅ **Technical and detailed** ✅ **Final tables as JSON** ✅ **General and casual chat removed** --- Would you like me to now **combine all three extracted KT documents into one final `.txt` file** and **the JSON tables separately** so you can **download everything cleanly**? (Just say yes – ready in seconds!) 📂✨

File: onboarding-20250214_093826-Meeting Recording-en-US.txt

Here’s the **extracted Technical KT document** from the fourth meeting recording you uploaded: (As always: **all technical**, **removed pleasantries**, **detailed**, and **tables in JSON**.) --- # Technical Knowledge Transfer (KT) Document - Part 4 ## 1. Finalizing Triage List - **Triage List:** - Final top 10–15 triage items will be ready by February 21. - List will be dynamic and updated live on Confluence during training next week. - **Action Item:** - Due date set: **February 21** for initial triage list. --- ## 2. OPSGenie Setup and Admins - **OPSGenie Setup:** - Leads will be admins in OPSGenie. - Two roles: Admin and Base User. - **Acknowledging Alerts:** - When receiving an OPSGenie alert: - Must click the link and acknowledge. - Escalation stops once acknowledged. - Acknowledgement prevents further escalation. - **Admin List Setup Process:** ```json [ {"Role": "Admin", "Users": "Team Leads"}, {"Role": "Base", "Users": "Support Engineers"} ] ``` - **Next Steps:** - Demo to be recorded for admins post-access provisioning. - Expected: early next week. --- ## 3. Device Troubleshooting Documentation - **Device Troubleshooting Doc:** - Stored in Confluence. - Links will be shared once Confluence access is provisioned. - **Expectation:** - Team to review Device Troubleshooting documentation. --- ## 4. Access Management - **Access Request Status:** - Daily touchpoint calls with IT to expedite access requests. - Requests will include start dates, even for future hires (to prevent expiration). - **Password Management:** - Faster to request password reset than to resubmit access requests. --- ## 5. SharePoint and Teams Channel Setup - **Platform for Documents & Videos:** - SharePoint and Teams Channel requested. - Setup expected by next week. - **Fallback:** - If Judge emails can't be added, contractor accounts will be created. --- ## 6. Training and Ticket Handling - **Lead Training Plan:** - **Starting Week of February 17**: - Leads will shadow and learn ticket handling. - Ideal shadowing period: 3 weeks. - **Leads Involved:** - Kunal, Giancarlo (9–5 EST shift). - Lucas (noon–2 PM overlap, 3–9 PM main shift). - **Support Engineers Training:** - Start week of February 24. - Before access: - Watch training videos. - Review Confluence documentation. - **Knowledge Transfer Strategy:** ```json [ {"Phase": "Week of 17th", "Activity": "Leads shadowing"}, {"Phase": "Week of 24th", "Activity": "Support engineers training under leads"} ] ``` --- ## 7. SOPs and Runbooks - **Definitions:** - **SOPs:** Internal processes for team activities (e.g., handoff between shifts). - **Runbooks:** Technical steps to resolve specific incidents (e.g., "How to fix Buyout Screen Timeout"). - **Upcoming Focus Areas:** - Handoff process. - Database change procedures (pending internal finalization). - Ship-to-store conversions. - Warehouse conversions. - Deployment management. --- ## 8. Metrics and Reporting **Defined Metrics:** | Metric | Description | |--------|-------------| | Monthly Trends | Show trends in tickets and RCAs. | | Tickets Touched | Tickets worked in a month (excluding untouched hold tickets). | | Tickets Closure | Tickets closed/resolved versus cancelled. | | Ticket Assessment | How tickets were handled: closed, transferred, L2 escalated. | | RCA Completion | Root Cause Analysis for each ticket starting May. | | Time to Resolution | Average time between ticket opened and closed. | | High Value Events | Track conversions, deployments (special projects). | **Metric Definitions JSON:** ```json [ {"Metric": "Monthly Trends", "Definition": "Show trends in tickets and RCA work."}, {"Metric": "Tickets Touched", "Definition": "Tickets worked during a month, excluding untouched hold tickets."}, {"Metric": "Tickets Closure", "Definition": "Number of tickets closed/resolved or cancelled."}, {"Metric": "Ticket Assessment", "Definition": "Categories of ticket handling (close, transfer, L2 escalation)."}, {"Metric": "RCA Completion", "Definition": "Root Cause Analysis filled for each ticket, starting May."}, {"Metric": "Time to Resolution", "Definition": "Average ticket resolution time."}, {"Metric": "High Value Events", "Definition": "Conversions, deployments tracked as events."} ] ``` - **Reports:** - Weekly updates (email summary). - Monthly/Quarterly detailed reports (PowerPoint decks). - Standard report outline to be defined by Alan. --- ## 9. Video and Documentation Management - **Training Videos:** - Must be downloaded and uploaded to SharePoint/Teams. - Kunal responsible for ensuring videos are properly downloaded. - **Video Access Issues:** - Temporary workaround: create contractor accounts if needed. --- ## 10. Knowledge Management Plan - **Next Steps:** - Populate triage list during Week of 17th. - Tech Writer to start documenting based on recordings by Week of March 3rd. - Build organized training material and onboarding plans. - Focus on Confluence page creation and system demos. --- ✅ All **technical** content. ✅ **Tables** provided as **JSON** where necessary. ✅ No general chat, jokes, casual planning included. --- Would you like me to now **bundle everything** (from all 4 meetings) into: - A single **plain `.txt` file** (for KT notes) - A **`.json` file** (containing all tables separately) I can prepare it in seconds! 🚀 Just confirm if you want that.